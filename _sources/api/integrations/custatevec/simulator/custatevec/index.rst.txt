:py:mod:`integrations.custatevec.simulator.custatevec`
======================================================

.. py:module:: integrations.custatevec.simulator.custatevec


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   integrations.custatevec.simulator.custatevec.CuStateVecSimulator




.. py:class:: CuStateVecSimulator(noise_model=None, param_resolver: Optional[cirq.ParamResolverOrSimilarType] = None, qubit_order=cirq.ops.QubitOrder.DEFAULT, seed: cirq.RANDOM_STATE_OR_SEED_LIKE = None, circuit_memoization_size: int = 0, qsim_options: Optional[qsimcirq.QSimOptions] = None)

   Bases: :py:obj:`integrations.cirq.simulator.qsim_simulator.QSimSimulator`

   CustatevecSimulator is qsimcirq simulator that
      uses Nvidia GPUs for all simulation. CUDA toolkit and some dependency tools
      must be installed. The installation guidelines are provided in
      https://quantumai.google/qsim/tutorials/gcp_gpu.
   :param noise_model: an optional noise model to pass in for noisy simulations
   :param param_resolver: Optional arg that defines the
   :param parameters to run with the program.:
   :param qubit_order: Optional arg that defines the ordering of qubits.
   :param seed: seed for random number generator.
   :param circuit_memoization_size: Optional arg tht defines the number of
   :param last translated circuits to be memoized from simulation executions:
   :param :
   :param to eliminate translation overhead.:
   :param qsim_options: An options dict or QSimOptions object with options
   :param to use for all circuits run using this simulator. See QSimOptions from:
   :param qsimcirq for more details.:

   .. py:attribute:: supports_batching
      :annotation: = True

      

   .. py:attribute:: batch_size
      

      


