:py:mod:`integrations.forest`
=============================

.. py:module:: integrations.forest


Subpackages
-----------
.. toctree::
   :titlesonly:
   :maxdepth: 3

   conversions/index.rst


Submodules
----------
.. toctree::
   :titlesonly:
   :maxdepth: 1

   simulator/index.rst


Package Contents
----------------

Classes
~~~~~~~

.. autoapisummary::

   integrations.forest.ForestSimulator




.. py:class:: ForestSimulator(device_name: str, seed: int = None, nthreads: int = 1)

   Bases: :py:obj:`orquestra.quantum.api.backend.QuantumSimulator`

   .. py:attribute:: supports_batching
      :annotation: = False

      

   .. py:method:: run_circuit_and_measure(circuit: orquestra.quantum.circuits.Circuit, n_samples: int) -> orquestra.quantum.measurements.Measurements

      Run a circuit and measure a certain number of bitstrings. Note: the number
      of bitstrings measured is derived from self.n_samples

      :param circuit: the circuit to prepare the state
      :param n_samples: The number of samples to measure.

      :returns: a list of bitstrings (a list of tuples)


   .. py:method:: get_exact_expectation_values(circuit: orquestra.quantum.circuits.Circuit, qubit_operator: orquestra.quantum.openfermion.ops.SymbolicOperator) -> orquestra.quantum.measurements.ExpectationValues



