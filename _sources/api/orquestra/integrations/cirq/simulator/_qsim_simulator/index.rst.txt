:orphan:

:py:mod:`orquestra.integrations.cirq.simulator._qsim_simulator`
===============================================================

.. py:module:: orquestra.integrations.cirq.simulator._qsim_simulator


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   orquestra.integrations.cirq.simulator._qsim_simulator.QSimSimulator




.. py:class:: QSimSimulator(noise_model: cirq.NOISE_MODEL_LIKE = None, param_resolver: Optional[cirq.ParamResolverOrSimilarType] = None, qubit_order=cirq.ops.QubitOrder.DEFAULT, seed: cirq.RANDOM_STATE_OR_SEED_LIKE = None, circuit_memoization_size: int = 0, qsim_options: Optional[qsimcirq.QSimOptions] = None, normalize_wavefunction: bool = False)

   Bases: :py:obj:`orquestra.integrations.cirq.simulator._base.CirqBasedSimulator`

   Integration with qsim simulator.
   In order to run on GPU using cuStateVec
   (https://docs.nvidia.com/cuda/cuquantum/custatevec/index.html)
   please provide `use_gpu=True` and `gpu_mode=1` in `qsim_options`.
   Visit https://quantumai.google/qsim to learn more about qsimcirq


   :param noise_model: an optional noise model to pass in for noisy simulations
   :param param_resolver: Optional arg that defines the
   :param parameters to run with the program.:
   :param qubit_order: Optional arg that defines the ordering of qubits.
   :param seed: seed for random number generator.
   :param circuit_memoization_size: Optional arg tht defines the number of
                                    last translated circuits to be memoized from simulation executions,
                                    to eliminate translation overhead.
   :param qsim_options: An options dict or QSimOptions object with options
                        to use for all circuits run using this simulator. See QSimOptions from
                        qsimcirq for more details.
   :param normalize_wavefunction: Whether to normalize the state vector after
                                  simulation of the quantum circuit, by default False. This flag is
                                  exposed because sometimes, the resulting state vector from a qsim
                                  circuit simulation is not normalized up to machine precision, which
                                  can cause issues with some applications such as sampling using a
                                  probability vector.

   .. attribute:: simulator

      Qsim simulator this class uses with the options defined.

   .. attribute:: noise_model

      an optional noise model to pass in for noisy simulations

   .. attribute:: param_resolver

      param_resolver: Optional arg that defines the
      parameters to run with the program.

   .. attribute:: qubit_order

      Optional arg that defines the ordering of qubits.

   .. py:attribute:: supports_batching
      :annotation: = True

      

   .. py:attribute:: batch_size
      

      


