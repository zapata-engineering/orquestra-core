:py:mod:`orquestra.quantum.api.circuit_runner_contracts`
========================================================

.. py:module:: orquestra.quantum.api.circuit_runner_contracts


Module Contents
---------------


Functions
~~~~~~~~~

.. autoapisummary::

   orquestra.quantum.api.circuit_runner_contracts.strict_runner_returns_number_of_measurements_equal_to_n_samples
   orquestra.quantum.api.circuit_runner_contracts.get_context_selection_circuit_for_group
   orquestra.quantum.api.circuit_runner_contracts.perform_context_selection
   orquestra.quantum.api.circuit_runner_contracts.circuit_runner_gate_compatibility_contracts



Attributes
~~~~~~~~~~

.. autoapisummary::

   orquestra.quantum.api.circuit_runner_contracts.CIRCUIT_RUNNER_CONTRACTS
   orquestra.quantum.api.circuit_runner_contracts.STRICT_CIRCUIT_RUNNER_CONTRACTS


.. py:function:: strict_runner_returns_number_of_measurements_equal_to_n_samples(runner: orquestra.quantum.api.circuit_runner.CircuitRunner)


.. py:function:: get_context_selection_circuit_for_group(qubit_operator: orquestra.quantum.operators.PauliRepresentation) -> Tuple[orquestra.quantum.circuits.Circuit, orquestra.quantum.operators.PauliSum]

   Get the context selection circuit for measuring the expectation value
   of a group of co-measurable Pauli terms.
   :param qubit_operator: operator representing group of co-measurable Pauli term


.. py:function:: perform_context_selection(estimation_tasks: List[orquestra.quantum.api.EstimationTask]) -> List[orquestra.quantum.api.EstimationTask]

   Changes the circuits in estimation tasks to involve context selection.
   :param estimation_tasks: list of estimation tasks


.. py:data:: CIRCUIT_RUNNER_CONTRACTS
   

   

.. py:data:: STRICT_CIRCUIT_RUNNER_CONTRACTS
   

   

.. py:function:: circuit_runner_gate_compatibility_contracts(exp_val_spread=1.0, gates_to_exclude=None)


