:py:mod:`orquestra.quantum.runners.symbolic_simulator`
======================================================

.. py:module:: orquestra.quantum.runners.symbolic_simulator


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   orquestra.quantum.runners.symbolic_simulator.SymbolicSimulator




.. py:class:: SymbolicSimulator(*, seed: Optional[int] = None)

   Bases: :py:obj:`orquestra.quantum.api.wavefunction_simulator.BaseWavefunctionSimulator`

   A simulator computing wavefunction by consecutive gate matrix multiplication.

   :param seed: the seed of the sampler

   .. py:method:: is_natively_supported(operation: orquestra.quantum.circuits.Operation) -> bool

      Determine if given operation is natively supported by this simulator.

      By default, operation is natively supported iff it is a GateOperation.
      However, this doesn't have to be true for every simulator.
      If the set of natively supported operations is different for
      some simulator, this method should be changed accordingly.

      :param operation: operation to be checked.

      :returns: True if `operation` is natively supported and False otherwise.



