:py:mod:`orquestra.quantum.testing`
===================================

.. py:module:: orquestra.quantum.testing


Submodules
----------
.. toctree::
   :titlesonly:
   :maxdepth: 1

   generate_cases_for_backend_tests/index.rst
   mocks/index.rst
   test_cases_for_backend_tests/index.rst


Package Contents
----------------

Classes
~~~~~~~

.. autoapisummary::

   orquestra.quantum.testing.Wavefunction
   orquestra.quantum.testing.MockCircuitRunner



Functions
~~~~~~~~~

.. autoapisummary::

   orquestra.quantum.testing.create_random_wavefunction



.. py:class:: Wavefunction(amplitude_vector: orquestra.quantum.typing.ParameterizedVector)

   A simple wavefunction data structure that can
   be used to calculate amplitudes of quantum states.

   :param amplitude_vector: the initial amplitudes of the system,
                            can either be a NumPy ndarray or a SymPy Matrix

   .. py:method:: amplitudes() -> Union[numpy.ndarray, sympy.Matrix]
      :property:


   .. py:method:: n_qubits()
      :property:


   .. py:method:: free_symbols() -> Set[sympy.Symbol]
      :property:


   .. py:method:: zero_state(n_qubits: int) -> Wavefunction
      :staticmethod:


   .. py:method:: dicke_state(n_qubits: int, hamming_weight: int) -> Wavefunction
      :staticmethod:


   .. py:method:: bind(symbol_map: Dict[sympy.Symbol, Any]) -> Wavefunction


   .. py:method:: get_probabilities() -> numpy.ndarray


   .. py:method:: get_outcome_probs() -> Dict[str, float]



.. py:function:: create_random_wavefunction(n_qubits, seed=None)

   Create a random wavefunction for testing purposes.


.. py:class:: MockCircuitRunner

   .. py:attribute:: supports_batching
      :annotation: = False

      

   .. py:method:: run_and_measure(circuit: orquestra.quantum.circuits.Circuit, n_samples: int, **kwargs) -> orquestra.quantum.measurements.Measurements


   .. py:method:: get_measurement_outcome_distribution(circuit: orquestra.quantum.circuits.Circuit, n_samples: Optional[int]) -> orquestra.quantum.distributions.MeasurementOutcomeDistribution



