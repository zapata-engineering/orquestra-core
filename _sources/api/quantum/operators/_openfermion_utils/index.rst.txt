:orphan:

:py:mod:`quantum.operators._openfermion_utils`
==============================================

.. py:module:: quantum.operators._openfermion_utils

.. autoapi-nested-parse::

   This module contains functions from openfermion adapted for use with Orquestra's
   PauliTerm and PauliSum classes.



Submodules
----------
.. toctree::
   :titlesonly:
   :maxdepth: 1

   config/index.rst
   operator_utils/index.rst
   sparse_tools/index.rst


Package Contents
----------------


Functions
~~~~~~~~~

.. autoapisummary::

   quantum.operators._openfermion_utils.hermitian_conjugated
   quantum.operators._openfermion_utils.is_hermitian
   quantum.operators._openfermion_utils.expectation
   quantum.operators._openfermion_utils.get_sparse_operator



Attributes
~~~~~~~~~~

.. autoapisummary::

   quantum.operators._openfermion_utils.EQ_TOLERANCE


.. py:data:: EQ_TOLERANCE
   :annotation: = 1e-08

   

.. py:function:: hermitian_conjugated(operator)

   Return Hermitian conjugate of operator.


.. py:function:: is_hermitian(operator)

   Test if operator is Hermitian.


.. py:function:: expectation(operator, state)

   Compute the expectation value of an operator with a state.

   :param operator: The operator whose expectation value is desired.
   :type operator: scipy.sparse.spmatrix or scipy.sparse.linalg.LinearOperator
   :param state: A numpy array
                 representing a pure state or a sparse matrix representing a density
                 matrix. If `operator` is a LinearOperator, then this must be a
                 numpy array.
   :type state: numpy.ndarray or scipy.sparse.spmatrix

   :returns: A complex number giving the expectation value.

   :raises ValueError: Input state has invalid format.


.. py:function:: get_sparse_operator(operator: quantum.operators._pauli_operators.PauliRepresentation, n_qubits: Optional[int] = None)

   Initialize a Scipy sparse matrix from a PauliTerm or PauliSum.

   :param operator: the pauli representation to convert to matrix representation.
   :param n_qubits: Number of qubits.
   :type n_qubits: int

   :returns: The corresponding Scipy sparse matrix.


