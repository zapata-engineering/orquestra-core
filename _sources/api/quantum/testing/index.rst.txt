:py:mod:`quantum.testing`
=========================

.. py:module:: quantum.testing


Submodules
----------
.. toctree::
   :titlesonly:
   :maxdepth: 1

   generate_cases_for_backend_tests/index.rst
   mocks/index.rst
   test_cases_for_backend_tests/index.rst


Package Contents
----------------

Classes
~~~~~~~

.. autoapisummary::

   quantum.testing.MockQuantumBackend



Functions
~~~~~~~~~

.. autoapisummary::

   quantum.testing.create_random_wavefunction



.. py:function:: create_random_wavefunction(n_qubits, seed=None)

   Create a random wavefunction for testing purposes.


.. py:class:: MockQuantumBackend

   Bases: :py:obj:`orquestra.quantum.api.backend.QuantumBackend`

   .. py:attribute:: supports_batching
      :annotation: = False

      

   .. py:method:: run_circuit_and_measure(circuit: orquestra.quantum.circuits.Circuit, n_samples: int, **kwargs) -> orquestra.quantum.measurements.Measurements



